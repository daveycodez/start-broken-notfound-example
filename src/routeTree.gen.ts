/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as EnRouteRouteImport } from './routes/en/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EnIndexRouteImport } from './routes/en/index'

const EnRouteRoute = EnRouteRouteImport.update({
  id: '/en',
  path: '/en',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EnIndexRoute = EnIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EnRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/en': typeof EnRouteRouteWithChildren
  '/en/': typeof EnIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/en': typeof EnIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/en': typeof EnRouteRouteWithChildren
  '/en/': typeof EnIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/en' | '/en/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/en'
  id: '__root__' | '/' | '/en' | '/en/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EnRouteRoute: typeof EnRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/en': {
      id: '/en'
      path: '/en'
      fullPath: '/en'
      preLoaderRoute: typeof EnRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/en/': {
      id: '/en/'
      path: '/'
      fullPath: '/en/'
      preLoaderRoute: typeof EnIndexRouteImport
      parentRoute: typeof EnRouteRoute
    }
  }
}

interface EnRouteRouteChildren {
  EnIndexRoute: typeof EnIndexRoute
}

const EnRouteRouteChildren: EnRouteRouteChildren = {
  EnIndexRoute: EnIndexRoute,
}

const EnRouteRouteWithChildren =
  EnRouteRoute._addFileChildren(EnRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EnRouteRoute: EnRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
